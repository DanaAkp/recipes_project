version: '3.9'
services:
  db-recipes:
    image: postgres:14
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${DATABASE_NAME_RECIPES} -U $${DATABASE_USER_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DATABASE_NAME_RECIPES}
      POSTGRES_USER: ${DATABASE_USER_NAME}
      POSTGRES_PASSWORD: ${DATABASE_USER_PASSWORD}
  db-auth:
    image: postgres:14
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${DATABASE_NAME_AUTH} -U $${DATABASE_USER_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DATABASE_NAME_AUTH}
      POSTGRES_USER: ${DATABASE_USER_NAME}
      POSTGRES_PASSWORD: ${DATABASE_USER_PASSWORD}
  recipes-api-service:
    build:
      context: .
      dockerfile: recipes_api/Dockerfile
    restart: unless-stopped
    container_name: api
    env_file:
      - .env
    ports:
      - "8080:80"
    depends_on:
      db-recipes:
        condition: service_healthy
    volumes:
      - recipes:/var/lib/postgresql/data
  auth-service:
    build: ./auth_service
    ports:
      - "5001:5001"
    container_name: auth
    depends_on:
      db-auth:
        condition: service_healthy
    volumes:
      - auth:/var/lib/postgresql/data

volumes:
  recipes:
  auth: