version: '3.9'
services:
  db-recipes:
    image: ./db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${DATABASE_NAME_RECIPES}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
  db-auth:
    image: ./db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${DATABASE_NAME_AUTH}
      POSTGRES_USER: ${DB_USER_NAME}
      POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
  api:
    build: ./recipes_api
    user: 1000:1000
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8080:80"
    depends_on:
      db-recipes:
        condition: service_healthy
    volumes:
      - recipes:/var/lib/postgresql/data
  auth-service:
    build: ./auth_service
    ports:
      - "5001:5001"
    depends_on:
      db-auth:
        condition: service_healthy
    volumes:
      - auth:/var/lib/postgresql/data

volumes:
  recipes:
  auth: